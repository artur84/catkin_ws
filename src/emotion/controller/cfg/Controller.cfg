#! /usr/bin/env python

PACKAGE='controller'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name          Type     Reconfiguration level    Description     Default Min   Max
gen.add("k1",     double_t,    0,    "k1 gain", 1, 0, 20)
gen.add("k2",     double_t,    0,    "k2 gain", 1, 0, 20)
gen.add("k3",     double_t,    0,    "k3 gain", 1, 0, 20)
gen.add("k4",     double_t,    0,    "k4 gain", 1, 0, 20)
gen.add("Pfm_x",  double_t,    0,    "Position of follower point, x coord", 1, -10, 10)
gen.add("Pfm_y",  double_t,    0,    "Position of follower point, y coord", 0, -10, 10)
gen.add("enable_debug", bool_t, 0,   "Enable visual debug", False)

ctrl_laws = gen.enum([
               gen.const("Parametric", str_t, "parametric", "Parametric follower point"),
               gen.const("Singular", str_t, "singular", "Follower point on y-axis"),
               gen.const("SingularPos", str_t, "singular_pos", "Follower point on y-axis plus position error"),
               gen.const("Velocity", str_t, "velocity", "Generalized velocity controller") ],
                   "An enum to set control_laws")

gen.add("ctrl_laws", str_t, 0, "The control laws to use", "parametric", edit_method=ctrl_laws)

exit(gen.generate(PACKAGE, "controller", "controller_params"))

