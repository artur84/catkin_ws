<!-- Simulation for RiskRRT experiments using Stage -->
<!-- author: Jorge and Procopio -->
<!-- usage: scenario:=xxxx to change the scenario -->
<!-- each scenario has a folder inside world folder, and it must have -->
<!-- the following files: map.yaml, image.pgm, scenario.world and social_filter.launch -->

<!-- usage: move_base:=0 to use RiskRRT home-made executor -->

<launch>

  <arg name="scenario" default="corridor_large" />
  <param name="/use_sim_time" value="true" /> 

  <!-- Publish our map --> 
  <node pkg="map_server" type="map_server" name="map_server" output="screen" args="$(find wheelchair)/world/$(arg scenario)/map.yaml" respawn="false" >
    <param name="frame_id" value="/map" />
  </node>
 
  <!-- Start stage -->
  <node pkg="stage" type="stageros" name="stageros" args="$(find wheelchair)/world/$(arg scenario)/scenario.world" respawn="false" output="screen">
    <param name="base_watchdog_timeout" value="0.2"/>
  </node>
  
  <!-- BEGIN ROBOT 0 = WHEELCHAIR -->
  <group ns="robot_0">
    <param name="tf_prefix" value="robot_0" />

    <!-- initialize amcl -->
    <include file="$(find wheelchair)/launch/amcl.launch"/>

    <!-- Social Filter  -->
    <include file="$(find wheelchair)/world/$(arg scenario)/social_filter.launch"/>
    
    <!-- RiskRRT Node-->
    <node pkg="RiskRRT" type="rosplanner_static" name="rosplanner_static" args="$(find RiskRRT)/wheelchair.config " output="screen" >
    <rosparam file="$(find RiskRRT)/planning.yaml" command="load" />
    </node>
    
    <!-- RiskRRT home-made executor -->
    <node pkg="RiskRRT" type="rosexecWheelchair" name="rosexecWheelchair" args="$(find RiskRRT)/planning.config $(find RiskRRT)/wheelchair.config" output="screen"/>

  </group>
  <!-- END ROBOT 0 -->

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find wheelchair)/conf/riskrrt_config.rviz"/>

</launch>
