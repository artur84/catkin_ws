<!-- run navigation demo with the wheelchair  -->
<!-- author: Procopio, Jorge, Arturo -->

<!-- usage: to use RiskRRT, the argument riskrrt must be set to 1 (riskrrt:=1) -->
<!--        to change the default map (inria hall) the argument map:=xxx.yaml should be used -->
<!--        to use social filters, the argument social must be set to 1 (social:=1) -->

<!-- examples: roslaunch wheelchair demo_nav.launch riskrrt:=1 (default map, riskrrt planner, no social filter) -->
<!--           roslaunch wheelchair demo_nav.launch map:=labo.yaml (labo map, ros planner, no social filter) -->
<!--           roslaunch wheelchair demo_nav.launch riskrrt:=1 social:=1 (default map, riskrrt planner with social filter) -->

<launch>

  <arg name="map" default="small_corridor.yaml" />
  <arg name="riskrrt" default="0" />
  <arg name="social" default="0" />

  <!-- start wheelchair base and localization (amcl) -->
  <include file="$(find wheelchair)/launch/start_wheelchair.launch"/>

  <!-- Publish our map --> 
  <node pkg="map_server" type="map_server" name="map_server" output="screen" args="$(find wheelchair)/world/$(arg map)" />
  
  ### Social Filters
  <group if="$(arg social)">
    <!--<node pkg="social_filter" type="ar_human_proc" name="ar_human_proc" output="screen"/>-->
    <node pkg="social_filter" type="fform_detect" name="fform_detect" output="screen"/>
    <node pkg="social_filter" type="human_markers" name="human_markers" output="screen"/>
  </group>
  
  ### RiskRRT  
  <group if="$(arg riskrrt)">
    
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find wheelchair)/conf/demo_nav_riskrrt.vcg" />    
  
    <node pkg="RiskRRT" type="rosplanner_static" name="rosplanner_static" args="$(find RiskRRT)/planning.config $(find RiskRRT)/wheelchair.config" />
    <node pkg="RiskRRT" type="rosexecWheelchair" name="rosexecWheelchair" args="$(find RiskRRT)/planning.config $(find RiskRRT)/wheelchair.config" />
  
  </group>
      
  ### Other Planners    
  <group unless="$(arg riskrrt)">
    
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find wheelchair)/conf/riskrrt_config.rviz" /> 
      
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
<!--       <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/> -->
      <rosparam file="$(find wheelchair)/move_base_config/real_costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find wheelchair)/move_base_config/real_costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find wheelchair)/move_base_config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find wheelchair)/move_base_config/global_costmap_params.yaml" command="load" />
      <!--<rosparam file="$(find wheelchair)/move_base_config/dwa_local_planner_params.yaml" command="load" /> -->
      <rosparam file="$(find wheelchair)/move_base_config/base_local_planner_params.yaml" command="load" /> 
      
      ## alternative global planners ##
      <!-- <param name="base_global_planner" value="goal_passer/GoalPasser"/> -->
      <!-- <param name="base_global_planner" value="carrot_planner/CarrotPlanner"/> -->
      <!-- <param name="base_global_planner" value="SBPLLatticePlanner"/>-->

      ## OMPL global planners ##
      <!-- <param name="base_global_planner" value="ompl_planner_base/OMPLPlannerBase" /> -->
      <!-- <param name="OMPLPlannerBase/publish_diagnostics" value="true" /> -->
      <!-- <param name="OMPLPlannerBase/interpolate_path" value="true" /> -->
      <!-- <param name="OMPLPlannerBase/global_planner_type" value="LazyRRT" /> -->
      <!-- KPIECE, BKPIECE, LBKPIECE, SBL, pSBL, EST, PRM, RRT, RRTConnect, pRRT, LazyRRT -->

      ## alternative local planners ##
      <!-- <param name="base_local_planner" value="pose_follower/PoseFollower"/> -->
      <!-- <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/> -->
      <!-- <param name="base_local_planner" value="eband_local_planner/EBandPlannerROS"/> -->
      </node>   
    
  </group>
  
</launch>
