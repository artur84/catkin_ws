<!-- Used to run a simultaion of user intentions module using the head as input	-->
<!--  PREREQUISITES: 
		- Connect the wheelchair and the kinect pointing to the face of the user.
		- roslaunch wheelchairconf start_kinect_face_pose_estimator.launch
-->


<launch>

	<param name="/use_sim_time" value="true" />
	<arg name="scenario" default="hall_inria" />
  	<arg name="riskrrt" default="0" />
 	<arg name="riskrrt_exec" default="0" />
  	<arg name="social" default="0" />
  	<arg name="control" default="head" /> #User intentions receives direction from head interface
	<arg name="corpus" default="demo_iros2012" /> #List of words to be considered by the voice.py node
	<arg name="mode" default="manual" /> #User intention will be initially in manual mode
	
	#### START SIMULATED WORLD ####
	<include file="$(find wheelchairconf)/launch/sim/start_simulation.launch">
	    <arg name="scenario" value="$(arg scenario)"/>
	</include>
	
    #### WHEELCHAIR ROBOT ####
    <group ns="robot_0">
		<param name="tf_prefix" value="robot_0" />
		<param name="amcl/initial_pose_x" value="14.5." />
		<param name="amcl/initial_pose_y" value="13.5" />
		<param name="amcl/initial_pose_a" value="-1.4." />
		<!-- Necessary static transformations -->
        <node pkg="tf" type="static_transform_publisher" name="tf_map_to_wheelchair" args="0 0 0 0 0 0 /map map 50" />
        <node pkg="tf" type="static_transform_publisher" name="tf_stage_laser_to_real_laser" args="0 0 0 0 0 0 base_laser_link base_laser 50" /> <!--very   important to add otherwise move_base will fail-->
		
		<!-- Navigation -->
		<group if="$(arg riskrrt)">
		    <include file="$(find wheelchairconf)/launch/navigation_riskrrt.launch" >
		        <arg name="riskrrt_exec" value="$(arg riskrrt_exec)" />
		    </include>
		    <param name="move_base/RiskRRTPlanner/plan_topic" value="/wheelchair/plan"/>  
		</group>
		
		<group unless="$(arg riskrrt)">
		    <include file="$(find wheelchairconf)/launch/navigation_planner_ros.launch" >
		    	<arg name="user_intentions" value="1"/>
			</include>
		</group>
		
		<!-- Social Filter  -->
		<group if="$(arg social)">
            <node pkg="social_filter" type="fform_detect" name="fform_detect" output="screen" respawn="true" /> 
            <!--node pkg="social_filter" type="ar_human_proc" name="ar_human_proc" output="screen"/-->
            <node pkg="social_filter"  type="kinect_human_proc" name="human_proc" args="$(arg persons)" output="screen"/>	
            <!-- human markers "args"= 1->human, 2->draw personal space, 3-> draw o-space, 4-> draw ips, 5 -> draw interesting objects -->
            <node pkg="social_filter" type="human_markers" name="human_markers" args="11101" output="screen"/> 
        </group> 
		
		<!-- Launch voice recognizer -->
		<node name="recognizer" pkg="pocketsphinx" type="recognizer.py" output="screen">
	    	<param name="lm" value="$(find wheelchairint)/voice_rcgn_files/$(arg corpus).lm"/>
	        <param name="dict" value="$(find wheelchairint)/voice_rcgn_files/$(arg corpus).dic"/>
	   	</node> 

		<!-- Velocity selector -->
		<node pkg="user_intentions" type="vel_selector.py" name="vel_selector" respawn="true" output="screen" >    
			<param name="mode" value="$(arg mode)"/> #Set to "autonomous" to be active
    	</node>
    	
		<!-- User Intentions Node -->
		<node pkg="sound_play" type="soundplay_node.py" name="wheelchair_play_voice"/>
    	<node pkg="user_intentions" type="user_intentions.py" name="user_intentions" respawn="true" output="screen" >    
			<param name="mode" value="$(arg mode)"/> #Set to "autonomous" to be active
			<param name="BN_goals_file" value="$(find wheelchairconf)/world/$(arg scenario)_goals.yaml"/>
			<param name="riskrrt" value="$(arg riskrrt)"/>
	        <remap from="cmd_dir" to="$(arg control)_dir" /> 
    	</node>
    	
		    
	</group>
	
	<!-- head command -->
	<group ns="robot_0">
		<!-- DO NOT MOVE THIS TO THE PREVIOUS GROUP: The head_cmd.launch should not change the tf_prefix-->
		<include file="$(find wheelchairconf)/launch/wheelchairint/head_cmd.launch">
			<arg name="user_intentions" value="1"/>
		</include>
	</group>

    <!-- Visualizer -->
	<group if="$(arg riskrrt)">
	    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find wheelchairconf)/config/rviz/sim_nav_riskrrt.vcg" />
    </group>
    <group unless="$(arg riskrrt)">
	    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find wheelchairconf)/config/rviz/sim_nav.vcg" />
    </group>
</launch>
