<!-- Used to test the demo for IROS wheelchair workshop in simulation  										-->
<!--  	This demo consisted in use the voice command to switch between  user_intentions asssited 			-->
<!--	 Driving and manual driving, the driving is performed using the head that is tracked by means of 	-->
<!--	 a kinect located in front of the person.             												-->
<!-- author: Arturo Escobedo-->

<!-- usage: (riskrrt:=1) 	to use RiskRRT, the argument riskrrt must be set to 1  -->
<!--        (map:=xxx.yaml) to change the default map (inria hall) -->
<!--        (social:=1)		to use social filters, the argument social must be set to 1  -->
<!--        (vel_selector:=1) to use vel_selector (node that reads cmd_vel from different controls and outputs the selected one to wheelchair) -->

<!-- examples: roslaunch wheelchairconf demo_nav.launch riskrrt:=1 (default map, riskrrt planner, no social filter) -->
<!--           roslaunch wheelchairconf sim_iros2012.launch  -->

<launch>
	<param name="/use_sim_time" value="true" />
	
	<arg name="scenario" default="lab" />
  	<arg name="riskrrt" default="0" />
  	<arg name="social" default="0" />
  	<arg name="mode" default="manual"/>
  	<arg name="control" default="head" />
  	<arg name="cmd_vel" default="move_base_vel" />

    #### START SIMULATED WORLD ####
	<include file="$(find wheelchairconf)/launch/start_simulation.launch">
	    <arg name="scenario" value="$(arg scenario)"/>
	</include>
	
	
	
	<!-- Launch voice recognizer -->
	<node name="recognizer" pkg="pocketsphinx" type="recognizer.py">
    	<param name="lm" value="$(find wheelchair_kinect)/voice_rcgn_files/demo_iros2012.lm"/>
        <param name="dict" value="$(find wheelchair_kinect)/voice_rcgn_files/demo_iros2012.dic"/>
   	</node> 

	<!-- Launch head controller -->
#	<include file="$(find wheelchair_kinect)/launch/head_cmd.launch"> 
#		<arg name="sim" value="1" />    
#		<arg name="user_intentions" value="1" />
#	</include>
	 
	<!-- Navigation -->
	<group unless="$(arg riskrrt)">
		<group ns="robot_0">
			<param name="tf_prefix" value="robot_0" />
			<!-- Launch navigation, move_base/risk_rrt/amcl etc -->
			<include file="$(find wheelchairconf)/launch/nav.launch">
				<arg name="cmd_vel" value="/$(arg cmd_vel)" />
			</include>
			<!-- Launches the vel_selector node -->
			<node pkg="user_intentions" type="vel_selector.py" name="vel_selector" output="screen" respawn="false">
				<param name="mode" value="$(arg mode)"/>	#Set to "autonomous" if you want to use commands from the move_base 
													#"manual" to use vel commands from the head
				<remap from="recognizer/output" to="/recognizer/output" />
				<remap from="control_vel" to="/$(arg control)_vel" />
			</node>
		</group>
	</group>
	
	<group if="$(arg riskrrt)">
			<!-- Launch navigation, move_base/risk_rrt/amcl etc -->
			<include file="$(find wheelchairconf)/launch/sim/sim_riskrrt.launch">
  				<arg name="scenario" value="$(arg scenario)" />
  				<arg name="move_base" value="0" />
  				<arg name="log" value="" />
  				<arg name="cmd_vel" default="/$(arg cmd_vel)" />
			</include>
			<group ns="robot_0">
			<!-- Launches the vel_selector node -->
			<node pkg="user_intentions" type="vel_selector.py" name="vel_selector" output="screen" respawn="false">
				<param name="mode" value="$(arg mode)"/>	#Set to "autonomous" if you want to use commands from the move_base 
													#"manual" to use vel commands from the head
				<remap from="recognizer/output" to="/recognizer/output" />
				<remap from="control_vel" to="/$(arg control)_vel" />
			</node>
			</group>
	</group>
	
	<!-- Launch user intentions, inactive== manual -->
	<include file="$(find user_intentions)/launch/user_intentions.launch">
		<arg name="sim" value="1"/>
		<arg name="control" value="$(arg control)" /> 
		<arg name="mode" value="$(arg mode)" /> 
		<arg name="riskrrt" value="$(arg riskrrt)"/>
	</include>

    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find wheelchairconf)/conf/sim_iros2012.vcg" />
	<!--node pkg="rviz" type="rviz" name="rviz" args="-d $(find wheelchairconf)/conf/sim_riskrrt.vcg" /-->
</launch>
