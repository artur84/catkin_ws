<!-- FIRST PART Used to run a simultaion of user intentions module and my ui_local_planner using the KEYBOARD as input, 	-->
<!-- USAGE:
    (1) roslaunch wheelchairconf sim_ui_local_planner_destination_1.launch
    Then in other terminal
    (2) roslaunch wheelchairconf sim_ui_local_planner_destination_2.launch

-->
<launch>

	<param name="/use_sim_time" value="true" />
	<arg name="scenario" default="hall_inria" />
	<arg name="planner" default="ui_planner" />
	<arg name="mode_selector" default="1"/>
    <arg name="sim" default="1"/>
    <arg name="persons" default="2"/> <!--For social filter: change this according to the  number of persons in the environment -->
    <arg name="mode" default="autonomous"/><!-- it can be manual or autonomous -->

    #### START SIMULATED WORLD ####
	<!-- Start stage -->
	<param name="/use_sim_time" value="true" />
    <node pkg="stage" type="stageros" name="stageros" args="$(find wheelchairconf)/world/$(arg scenario).world" respawn="false" output="screen">
	    <param name="base_watchdog_timeout" value="0.2"/>
    </node>

    <include file="$(find wheelchairconf)/world/$(arg scenario).launch"/>

    ##### START NAVIGATION ####
    ####### Publish the map: It should be global so no namespace is defined #####
	<param name="/use_sim_time" value="true" />
	<node pkg="map_server" type="map_server" name="map_server" output="log" args="$(find wheelchairconf)/world/$(arg scenario).yaml" respawn="true" >
		<param name="frame_id" value="/map" />
	</node>

	##### MOVE BASE #######
	<group ns="robot_0">
		<param name="/use_sim_time" value="true" />
		<param name="tf_prefix" value="robot_0" />
		<param name="move_base/RiskRRTPlanner/plan_topic" value="/robot_0/plan"/>  <!--Just needed for the riskrrt-->
		<include file="$(find wheelchairconf)/launch/navigation/amcl.launch" />
		<include file="$(find wheelchairconf)/launch/navigation/move_base_ui_planner.launch" >
			<arg name="cmd_vel" value="cmd_vel"/>#changes the cmd_vel topic's name
		</include>
		<node pkg="tf" type="static_transform_publisher" name="tf_map_to_wheelchair" args="0 0 0 0 0 0 /map /robot_0/map 100" />
        <node pkg="tf" type="static_transform_publisher" name="tf_stage_laser_to_real_laser" args="0 0 0 0 0 0 base_laser_link base_laser 100" />
	</group>

	##### START SOCIAL FILTER ####
    <!--group if="$(arg sim)"  ns="robot_0">
        <param name="/use_sim_time" value="true" />
		<param name="tf_prefix" value="robot_0" />
	    <include file="$(find wheelchairconf)/launch/social_filter/social_filter.launch" >
	    		<arg name="persons" value="$(arg persons)" />
	    </include>
	</group>

	<group if="$(arg sim)"  ns="robot_0">
        <param name="/use_sim_time" value="true" />
		<param name="tf_prefix" value="robot_0" />
	    <include file="$(find wheelchairconf)/launch/social_filter/social_grid.launch" >
	    		<arg name="tf_prefix" value="robot_0" />
	    </include>
	</group-->

	##### START DESTINATION INFERENCE ####
	<group  ns="robot_0">
		<param name="/use_sim_time" value="true" />
		<param name="tf_prefix" value="robot_0" />
    	<node pkg="user_intentions" type="destination_inference.py" name="destination_inference" respawn="true" output="screen" >
			<param name="BN_goals_file" value="$(find wheelchairconf)/world/$(arg scenario)_goals.yaml"/>
			<param name="planner" value="$(arg planner)"/>
			<remap from="user_dir" to="face_dir"/>
    	</node>
    </group>

	##### START MODE_SELECTOR ####
	<!--group  ns="robot_0">
		<param name="/use_sim_time" value="true" />
		<param name="tf_prefix" value="robot_0" />
		<node pkg="user_intentions" type="mode_selector.py" name="mode_selector" respawn="true" >
			<param name="mode" value="$(arg mode)"/> #Set to "autonomous" to be active
			<remap from="user_dir" to="/user/input"/>
			<remap from="user_vel" to="user_vel"/>
			<remap from="move_base_vel" to="ui_local_planner_vel"/>
    	</node>
    </group-->


</launch>
