<launch>
  <arg name="auto_face_tracking" default="True" />
  
  <node pkg="pi_face_tracker" name="pi_face_tracker" type="face_tracker.py" output="screen">
    <remap from="input_rgb_image" to="/camera/rgb/image_color" />
    <remap from="input_depth_image" to="/camera/depth/image" />
    <remap from="output_image" to="/pi_face_tracker/image" />
    
    <param name="auto_face_tracking" value="$(arg auto_face_tracking)" />
        
    <rosparam>
      use_haar_only: False
      use_depth_for_detection: True
      use_depth_for_tracking: True
      auto_min_features: True
      min_features: 20
      abs_min_features: 6
      good_feature_distance: 8
      add_feature_distance: 10
      std_err_xy: 2.5
      pct_err_z: 0.42
      max_mse: 100000
      show_text: True
      show_features: True
      fov_width: 1.094
      fov_height: 1.094
      max_face_size: 0.28
      expand_roi: 1.02
      flip_image: False
      feature_type: 0 <!-- 0 = Good Features To Track, 1 = SURF -->
      surf_hessian_quality: 100
    </rosparam>
    
  	<param name="cascade_frontal_alt" value="$(find pi_face_tracker)/params/haarcascade_frontalface_alt.xml" />
   	<param name="cascade_frontal_alt2" value="$(find pi_face_tracker)/params/haarcascade_frontalface_alt2.xml" />
  	<param name="cascade_profile" value="$(find pi_face_tracker)/params/haarcascade_profileface.xml" />

  </node>
</launch>
